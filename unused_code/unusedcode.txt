{/* 
const [infoTachas, setinfoTachas] = useState([]);
const fetcher = (...args) => fetch(...args).then(response => response.json());
const { data, error } = useSwr(url, { fetcher });
setinfoTachas([data && !error ? data.slice(0, 100) : []])
*/}

{/*
const [infoTachas, setinfoTachas] = useState([]);
const url = 'https://tachasweb-default-rtdb.firebaseio.com/data.json?print=pretty';

async function retrieveData(){
    const response = await fetch(url);
    const data = await response.json();
    setinfoTachas([data]);
}

retrieveData();

setInterval(retrieveData, 5000);

console.log("Lo que sale de App.js", infoTachas);
*/}

onValue(dbRef, (snapshot) => {
const data = snapshot.val();
});

console.log(data);



const SetBlink = (acel) => {

    const [render, setRender] = useState(true)
    const timerRef = useRef()
    
    const interval = (a) => {
        if ((0 <= a) && (a <= 60)) {
            return 1000
        }
        if ((61 <= a) && (a <= 80)) {
            return 500
        }
        if ((81 <= a) && (a <= 100)) {
            return 250
        }
        else {
            return 1000
        }
    }

    useEffect(() => {
        timerRef.current = setInterval(() => {setRender((r) => !r)}, interval(acel));
        return () => {clearInterval(timerRef.current)}
    },[acel])

    return render;
}


{props.nodos.map(nodo => ( SetBlink(nodo.acelerometro) ? (
                <Circle  
                key={nodo.id}
                center={[nodo.location.latitude, nodo.location.longitude]}
                pathOptions={{color: color_selector(nodo.acelerometro), stroke : false, fillOpacity : 0.9}}
                radius={zoom_converter(zoomLevel)}>
                <Popup>
                    ID: {nodo.id} <br></br>
                    Latitud: {nodo.location.latitude} <br></br>
                    Longitud: {nodo.location.longitude} <br></br>
                    Luz: {nodo.luz}<br></br>
                    Temperatura: {nodo.temperatura}<br></br>
                    Humedad: {nodo.humedad}<br></br>
                    Acelerometro : {nodo.acelerometro} <br></br>
                </Popup>
                <Tooltip direction="bottom" opacity={1} sticky = {true}>
                    ID: {nodo.id} <br></br>
                    Latitud: {nodo.location.latitude} <br></br>
                    Longitud: {nodo.location.longitude} <br></br>
                    Luz: {nodo.luz}<br></br>
                    Temperatura: {nodo.temperatura}<br></br>
                    Humedad: {nodo.humedad}<br></br>
                    Acelerometro : {nodo.acelerometro} <br></br>
                </Tooltip>
            </Circle>) : null ))}